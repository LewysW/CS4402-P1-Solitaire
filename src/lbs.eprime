language ESSENCE' 1.0

given cards : matrix indexed by [ int(1..n) ] of int(0..51) where alldifferent(cards)

letting ROWS = int(1..n)
letting COLUMNS = int(1..n)
letting MOVES = n

find piles : matrix indexed by [ROWS, COLUMNS] of int(-2..51)

such that

$Cards in first pile must be unique cards from cards list
forAll card : int(1..n) .
  piles[1, card] = cards[card],


$Number of empty piles must increase as moves are made
forAll pile : int(2..n) .
  forAll card : int((n - pile + 2)..n) .
    piles[pile, card] = -1,


forAll pile : int(1..n) .
  forAll card : int(1..(n - pile + 1)) .
    piles[pile, card] in toSet(cards)

$allDiff([piles[pile,card] | pile : int(1..n), card : int(1..(n - pile + 1))])


$max distance

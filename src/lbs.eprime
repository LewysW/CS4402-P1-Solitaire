language ESSENCE' 1.0

given cards : matrix indexed by [ int(1..n) ] of int(0..51) where alldifferent(cards)

letting ROWS = int(1..n)
letting COLUMNS = int(1..n)
letting MOVES = n

find piles : matrix indexed by [ROWS, COLUMNS] of int(-2..51)

such that

$Cards in first pile must be unique cards from cards list
forAll col : int(1..n) .
  piles[1, col] = cards[col],


$Number of empty elements must increase as moves are made
forAll row : int(1..n) .
  forAll col : int(n - row + 2..n) .
    piles[row, col] = -1



$max distance 
      

  

